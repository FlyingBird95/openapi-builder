# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import datetime
import os
import sys
import tempfile
from inspect import getsourcefile

DOCS_DIRECTORY = os.path.dirname(os.path.abspath(getsourcefile(lambda: 0)))
REPO_DIRECTORY = os.path.dirname(DOCS_DIRECTORY)

sys.path.insert(0, DOCS_DIRECTORY)
sys.path.insert(0, REPO_DIRECTORY)

from openapi_builder import __meta__ as meta  # noqa: E402 isort:skip


# -- Project information -----------------------------------------------------

now = datetime.datetime.now()

project = meta.name
project_path = meta.path
author = meta.author
copyright = f"{now.year}, {author}"


# The full version, including alpha/beta/rc tags
release = meta.version
# The short X.Y.Z version
version = ".".join(release.split(".")[0:3])


def copy_file(file_from, file_to):
    output_dir = os.path.dirname(file_to)
    os.makedirs(output_dir, exist_ok=True)

    if os.path.isfile(file_from):
        # Make docs/source/readme.rst be a symbolic link to README.rst
        #
        # We can't overwrite an existing file when calling os.symlink, so
        # we write to a temporary file and copy that over instead.
        tmp_path = tempfile.mktemp(dir=output_dir)
        try:
            os.symlink(file_from, tmp_path)
            os.replace(tmp_path, file_to)
        finally:
            if os.path.islink(tmp_path):
                os.remove(tmp_path)


def copy_files(_):
    """Makes a symbolic link to README.rst at docs/source/readme.rst."""
    readme_path = os.path.join(REPO_DIRECTORY, "README.rst")
    readme_path_output = os.path.join(DOCS_DIRECTORY, "source", "readme.rst")
    copy_file(readme_path, readme_path_output)

    # copy images
    img_dir = os.path.join(REPO_DIRECTORY, "img")
    img_dir_output = os.path.join(DOCS_DIRECTORY, "source", "img")
    img2_dir_output = os.path.join(DOCS_DIRECTORY, "img")
    for filename in os.listdir(img_dir):
        img_file = os.path.join(img_dir, filename)
        if not os.path.isfile(img_file):
            continue  # skip directories
        copy_file(img_file, os.path.join(img_dir_output, filename))
        copy_file(img_file, os.path.join(img2_dir_output, filename))

    # copy changelog
    changelog_path = os.path.join(REPO_DIRECTORY, "CHANGELOG.rst")
    changelog_path_output = os.path.join(DOCS_DIRECTORY, "source", "changelog.rst")
    copy_file(changelog_path, changelog_path_output)


def setup(app):
    """Set up our apidoc commands to run whenever sphinx is built."""
    app.connect("builder-inited", copy_files)


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = "1.0"

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named "sphinx.ext.*") or your custom
# ones.
extensions = [
    "sphinx_search.extension",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = [".rst"]

# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_book_theme"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = []

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``["localtoc.html", "relations.html", "sourcelink.html",
# "searchbox.html"]``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = project + "doc"


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ("letterpaper" or "a4paper").
    # "papersize": "letterpaper",
    #
    # The font size ("10pt", "11pt" or "12pt").
    # "pointsize": "10pt",
    #
    # Additional stuff for the LaTeX preamble.
    # "preamble": "",
    #
    # Latex figure (float) alignment
    # "figure_align": "htbp",
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, project + ".tex", project + " Documentation", meta.author, "manual"),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, project, project + " Documentation", [author], 1)]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        project,
        project + " Documentation",
        author,
        project,
        meta.description,
        "Miscellaneous",
    ),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ""

# A unique identification for the text.
#
# epub_uid = ""

# A list of files that should not be packed into the epub file.
epub_exclude_files = ["search.html"]


# -- Extension configuration -------------------------------------------------

# -- Options for intersphinx extension ---------------------------------------

# Example configuration for intersphinx
# Common intersphinx mappings can be found here:
# https://gist.github.com/bskinn/0e164963428d4b51017cebdb6cda5209
# intersphinx_mapping = {
#     "python": ("https://docs.python.org/{.major}".format(sys.version_info), None),
#     "attrs": ("https://www.attrs.org/en/stable/", None),
#     "numpy": ("https://numpy.org/doc/stable/", None),
#     "scipy": ("https://docs.scipy.org/doc/scipy/reference/", None),
#     "matplotlib": ("https://matplotlib.org/stable/", None),
#     "pandas": ("https://pandas.pydata.org/pandas-docs/stable/", None),
#     "Pillow": ("https://pillow.readthedocs.io/en/stable/", None),
#     "skimage": ("https://scikit-image.org/docs/stable/", None),
#     "sklearn": ("https://scikit-learn.org/stable/", None),
# }
